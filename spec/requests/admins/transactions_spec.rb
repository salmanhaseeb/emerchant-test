# frozen_string_literal: true

require 'rails_helper'

# This spec was generated by rspec-rails when you ran the scaffold generator.
# It demonstrates how one might use RSpec to test the controller code that
# was generated by Rails when you ran the scaffold generator.
#
# It assumes that the implementation code is generated by the rails scaffold
# generator. If you are using any extension libraries to generate different
# controller code, this generated spec may or may not pass.
#
# It only uses APIs available in rails and/or rspec-rails. There are a number
# of tools you can use to make these specs even more expressive, but we're
# sticking to rails and rspec-rails APIs to keep things simple and stable.

RSpec.describe '/admins/transactions', type: :request do
  # This should return the minimal set of attributes required to create a valid
  # Transaction. As you add validations to Transaction, be sure to
  # adjust the attributes here as well.
  let(:valid_attributes) do
    {
      amount: Faker::Number.number(digits: 5),
      customer_email: Faker::Internet.email,
      customer_phone: Faker::Number.number(digits: 11),
      type: 'AuthorizeTransaction',
      status: 'approved',
      merchant: FactoryBot.create(:merchant)
    }
  end

  let(:admin) { Admin.create(email: 'admin@admin.com', password: '123123') }

  describe 'GET /index' do
    before do
      sign_in admin
    end

    it 'renders a successful response' do
      Transaction.create! valid_attributes
      get transactions_url
      expect(response).to be_successful
    end
  end

  describe 'GET /show' do
    before do
      sign_in admin
    end

    it 'renders a successful response' do
      transaction = Transaction.create! valid_attributes
      get transaction_url(transaction)
      expect(response).to be_successful
    end
  end
end
